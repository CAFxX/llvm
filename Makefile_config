#,===-- Makefile.rules.am - Common make rules for LLVM ------*- Makefile -*--===#
#
#                     The LLVM Compiler Infrastructure
#
# This file was developed by Reid Spencer and is distributed under the 
# University of Illinois Open Source License. See LICENSE.TXT for details.
# 
#===------------------------------------------------------------------------===#

# Options for all automake makefiles
ACLOCAL_AMFLAGS  = -I autoconf -I autoconf/m4 --output=autoconf/aclocal.m4
AUTOMAKE_OPTIONS = foreign dejagnu dist-zip nostdinc

# Autoconf configured values
LLVM_PREFIX    := @LLVM_PREFIX@
LLVM_BINDIR    := @LLVM_BINDIR@
LLVM_LIBDIR    := @LLVM_LIBDIR@
LLVM_DATADIR   := @LLVM_DATADIR@
LLVM_DOCSDIR   := @LLVM_DOCSDIR@
LLVM_ETCDIR    := @LLVM_ETCDIR@
LLVM_INCLUDEDIR:= @LLVM_INCLUDEDIR@ 
LLVM_INFODIR   := @LLVM_INFODIR@
LLVM_MANDIR    := @LLVM_MANDIR@
BUILDMODE      := @BUILDMODE@

# Shared library extension for this platform.
SHLIBEXT = @SHLIBEXT@

# Executable file extension for this platform.
EXEEXT = @EXEEXT@

# Target operating system for which LLVM will be compiled.
OS=@OS@

# Target hardware architecture
ARCH=@ARCH@

# Endian-ness of the target
ENDIAN=@ENDIAN@

# Path to the C++ compiler to use.  This is an optional setting, which defaults
# to whatever your gmake defaults to.
CXX = @CXX@

# Path to the CC binary, which use used by testcases for native builds.
CC := @CC@

# Path to the Python interpreter
PYTHON := @PYTHON@

# Linker flags.
LDFLAGS+=@LDFLAGS@

# Libraries needed by tools
TOOLLINKOPTS=@LIBS@

# Path to the library archiver program.
AR_PATH = @AR@

# The pathnames of the Flex and Bison programs, respectively.
YACC     = @YACC@
BISON    = @BISON@
FLEX     = @LEX@

# Paths to miscellaneous programs.
RPWD    = pwd
SED     = sed
RM      = rm
CP      = cp
LN      = ln
CMP     = cmp
ECHO    = echo
MKDIR   = @abs_top_srcdir@/autoconf/mkinstalldirs
DATE    = date
MV      = mv
VERB    := @
IGNORE  := true
INSTALL = @INSTALL@
DOT     = @DOT@
ETAGS   = @ETAGS@
ETAGSFLAGS = @ETAGSFLAGS@

# Determine the target for which LLVM should generate code.
LLVMGCCARCH := @target@/3.4-llvm

# Full pathnames of LLVM C/C++ front-end 'cc1' and 'cc1plus' binaries:
LCC1 = @LLVMCC1@
LCC1XX = @LLVMCC1PLUS@

# Path to directory where object files should be stored during a build.
# Set OBJ_ROOT to "." if you do not want to use a separate place for
# object files.
OBJ_ROOT := .

# Path to location for LLVM C/C++ front-end. You can modify this if you
# want to override the value set by configure.
LLVMGCCDIR := @LLVMGCCDIR@

# These are options that can either be enabled here, or can be enabled on the
# make command line (ie, make ENABLE_PROFILING=1):

# When ENABLE_OPTIMIZED is enabled, Release builds of all of the LLVM code are
# turned on, and Debug builds are turned off.
#ENABLE_OPTIMIZED = 1

# When ENABLE_PROFILING is enabled, the llvm source base is built with profile
# information to allow gprof to be used to get execution frequencies.
#ENABLE_PROFILING = 1

# This option tells the Makefiles to produce verbose output.
# It essentially prints the commands that make is executing
#VERBOSE = 1


# Include the rules.
# WARNING NOTE WARNING NOTE WARNING NOTE WARNING NOTE
# The inclusion of Makefile_rules MUST be done such that there is a space
# before "include". This prevents automake from processing the file and
# simply passes the inclusion on to GNU Make. The rules in Makefile_rules
# depend on this. DO NOT REMOVE THE SPACE BEFORE "include"
 include $(top_srcdir)/Makefile_rules
